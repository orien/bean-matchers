var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":36,"id":1844,"methods":[{"el":9,"sc":3,"sl":7},{"el":13,"sc":3,"sl":11},{"el":25,"sc":3,"sl":15},{"el":30,"sc":3,"sl":27},{"el":35,"sc":3,"sl":32}],"name":"TestBeanWithOneProperty","sl":3}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_101":{"methods":[{"sl":7},{"sl":11}],"name":"canUseGetterToObtainPropertyValue","pass":true,"statements":[{"sl":8},{"sl":12}]},"test_104":{"methods":[{"sl":7},{"sl":11}],"name":"testHasValidGettersAndSettersFor","pass":true,"statements":[{"sl":8},{"sl":12}]},"test_115":{"methods":[{"sl":7},{"sl":11}],"name":"canGetPropertyFromBean","pass":true,"statements":[{"sl":8},{"sl":12}]},"test_124":{"methods":[{"sl":11},{"sl":15}],"name":"equalsShouldCompareToTargetBeanAndReturnFalseGivenBeansAreNotEqual","pass":true,"statements":[{"sl":12},{"sl":17},{"sl":18},{"sl":20},{"sl":22}]},"test_131":{"methods":[{"sl":27}],"name":"hashCodeShouldObtainTheHashCodeValueFromTargetBean","pass":true,"statements":[{"sl":29}]},"test_142":{"methods":[{"sl":7},{"sl":11}],"name":"testBeanHasValidGettersAndSettersFor","pass":true,"statements":[{"sl":8},{"sl":12}]},"test_152":{"methods":[{"sl":32}],"name":"getPropertyShouldThrowExceptionGivenPropertyDoesNotExistOnBean","pass":true,"statements":[{"sl":34}]},"test_153":{"methods":[{"sl":11},{"sl":32}],"name":"beanWithValidToStringShouldMatch","pass":true,"statements":[{"sl":12},{"sl":34}]},"test_18":{"methods":[{"sl":11},{"sl":15}],"name":"beanWithValidEqualsShouldMatch","pass":true,"statements":[{"sl":12},{"sl":17},{"sl":18},{"sl":20},{"sl":22},{"sl":24}]},"test_19":{"methods":[{"sl":11},{"sl":27}],"name":"beanWithValidHashCodeShouldMatch","pass":true,"statements":[{"sl":12},{"sl":29}]},"test_2":{"methods":[{"sl":11},{"sl":32}],"name":"beanWithValidToStringShouldMatch","pass":true,"statements":[{"sl":12},{"sl":34}]},"test_27":{"methods":[{"sl":11},{"sl":15}],"name":"equalsShouldCompareToTargetBeansAndReturnFalseGivenJavaBeanAndTargetBeansAreNotEqual","pass":true,"statements":[{"sl":12},{"sl":17},{"sl":18},{"sl":20},{"sl":22}]},"test_31":{"methods":[{"sl":15}],"name":"equalsShouldCompareToTargetBeanAndReturnTrueGivenBeansAreEqual","pass":true,"statements":[{"sl":17}]},"test_40":{"methods":[{"sl":7},{"sl":11}],"name":"canUseSetterToSetPropertyValue","pass":true,"statements":[{"sl":8},{"sl":12}]},"test_43":{"methods":[{"sl":32}],"name":"setPropertyShouldThrowExceptionGivenPropertyDoesNotExistOnBean","pass":true,"statements":[{"sl":34}]},"test_46":{"methods":[{"sl":11},{"sl":27}],"name":"beanWithValidHashCodeShouldMatch","pass":true,"statements":[{"sl":12},{"sl":29}]},"test_47":{"methods":[{"sl":32}],"name":"toStringShouldObtainTheToStringValueFromTargetBean","pass":true,"statements":[{"sl":34}]},"test_51":{"methods":[{"sl":7},{"sl":11}],"name":"beanWithValidGettersAndSettersShouldMatch","pass":true,"statements":[{"sl":8},{"sl":12}]},"test_58":{"methods":[{"sl":11},{"sl":15}],"name":"equalsShouldCompareToTargetBeansAndReturnTrueGivenJavaBeanAndTargetBeansAreEqual","pass":true,"statements":[{"sl":12},{"sl":17},{"sl":18},{"sl":20},{"sl":22},{"sl":24}]},"test_75":{"methods":[{"sl":7},{"sl":11}],"name":"beanWithValidGettersAndSettersShouldMatch","pass":true,"statements":[{"sl":8},{"sl":12}]},"test_81":{"methods":[{"sl":32}],"name":"propertyTypeShouldThrowExceptionGivenPropertyDoesNotExistOnBean","pass":true,"statements":[{"sl":34}]},"test_87":{"methods":[{"sl":7},{"sl":11}],"name":"canSetPropertyOnBean","pass":true,"statements":[{"sl":8},{"sl":12}]},"test_91":{"methods":[{"sl":11},{"sl":15}],"name":"beanWithValidEqualsShouldMatch","pass":true,"statements":[{"sl":12},{"sl":17},{"sl":18},{"sl":20},{"sl":22},{"sl":24}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [51, 104, 142, 40, 101, 75, 115, 87], [51, 104, 142, 40, 101, 75, 115, 87], [], [], [124, 18, 58, 51, 104, 142, 40, 101, 153, 19, 27, 2, 91, 75, 115, 87, 46], [124, 18, 58, 51, 104, 142, 40, 101, 153, 19, 27, 2, 91, 75, 115, 87, 46], [], [], [124, 18, 58, 27, 91, 31], [], [124, 18, 58, 27, 91, 31], [124, 18, 58, 27, 91], [], [124, 18, 58, 27, 91], [], [124, 18, 58, 27, 91], [], [18, 58, 91], [], [], [19, 131, 46], [], [19, 131, 46], [], [], [43, 153, 81, 2, 152, 47], [], [43, 153, 81, 2, 152, 47], [], []]
